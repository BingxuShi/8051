C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 15:55:57 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          
   4          
   5          #define LCD_DATA_PORT P2
   6          #define TIMER0_RELOAD_VALUE 65536 - (12000000 / 12 / 100) // ‰∏∫10msËÆ°ÁÆóÈáçËΩΩÂÄº
   7          
   8          sbit RS = P1^0;
   9          sbit RW = P1^1;
  10          sbit EN = P1^2;
  11          sbit StaStoBon = P3^3;
  12          sbit RestBon = P3^4;
  13          sbit CounBon = P3^2;
  14          unsigned char counter = 0;
  15          unsigned int ms_elapsed = 0;
  16          unsigned int seconds = 0;
  17          unsigned int minutes = 0;
  18          unsigned int hours = 0;
  19          
  20          unsigned int lap[3][4] = { 0 };
  21          
  22          void delay_ms(unsigned int ms)
  23          {
  24   1          unsigned int i, j;
  25   1      
  26   1          for(i = 0; i < ms; i++)
  27   1          {
  28   2              for(j = 0; j < 1000; j++) 
  29   2              {
  30   3                  // Á©∫Âæ™ÁéØÔºå‰ªÄ‰πà‰πü‰∏çÂÅö
  31   3              }
  32   2          }
  33   1      }
  34          
  35          void lcd_write_command(unsigned char command) {
  36   1          RS = 0;
  37   1          RW = 0;
  38   1          LCD_DATA_PORT = command;
  39   1          EN = 1;
  40   1          delay_ms(1);
  41   1          EN = 0;
  42   1          delay_ms(1);
  43   1      }
  44          
  45          void lcd_write_data(unsigned char data1) {
  46   1          RS = 1;
  47   1          RW = 0;
  48   1          LCD_DATA_PORT = data1;
  49   1          EN = 1;
  50   1          delay_ms(1);
  51   1          EN = 0;
  52   1          delay_ms(1);
  53   1      }
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 15:55:57 PAGE 2   

  55          void lcd_init() {
  56   1          delay_ms(15);
  57   1          lcd_write_command(0x38); // ËÆæÁΩÆ‰∏∫16x4ÊòæÁ§∫Ê®°ÂºèÔºå8‰ΩçÊï∞ÊçÆÊÄªÁ∫øÔºå2Ë°åÊòæÁ§∫Ôºå5x8ÁÇπÈòµÂ≠óÁ¨
             -¶
  58   1          lcd_write_command(0x0c); // ÂºÄÂêØÊòæÁ§∫ÔºåÂÖ≥Èó≠ÂÖâÊ†áÂíåÂÖâÊ†áÈó™ÁÉÅ
  59   1          lcd_write_command(0x06); // ÂÖâÊ†áÂè≥ÁßªÔºåÂ≠óÁ¨¶‰∏çÁßªÂä®
  60   1          lcd_write_command(0x01); // Ê∏ÖÂ±è
  61   1      }
  62          
  63          void lcd_clear() {
  64   1          lcd_write_command(0x01);
  65   1      }
  66          
  67          void lcd_set_cursor(unsigned char row, unsigned char col) {  //ËÆæÁΩÆÂÖâÊ†á‰ΩçÁΩÆ
  68   1          unsigned char address;
  69   1          if (row == 0) {
  70   2              address = col;
  71   2          } else if (row == 1) {
  72   2              address = col + 0x40;
  73   2          } else if (row == 2) {
  74   2              address = col + 0x10;
  75   2          } else { // row == 3
  76   2              address = col + 0x50;
  77   2          }
  78   1          lcd_write_command(0x80 | address);
  79   1      }
  80          
  81          void lcd_write_string(char *str) {
  82   1          while (*str) {
  83   2              lcd_write_data(*str++);
  84   2          }
  85   1      }
  86          
  87          void timer0_init() {
  88   1        TMOD |= 0x01; // ËÆæÁΩÆÂÆöÊó∂Âô®0‰∏∫Ê®°Âºè1Ôºà16‰ΩçÂÆöÊó∂Âô®/ËÆ°Êï∞Âô®Ôºâ
  89   1          TH0 = (TIMER0_RELOAD_VALUE >> 8) & 0xFF; // ËÆæÁΩÆÈ´òÂ≠óËäÇÈáçËΩΩÂÄº
  90   1          TL0 = TIMER0_RELOAD_VALUE & 0xFF; // ËÆæÁΩÆ‰ΩéÂ≠óËäÇÈáçËΩΩÂÄº
  91   1          ET0 = 1; // ‰ΩøËÉΩÂÆöÊó∂Âô®0‰∏≠Êñ≠
  92   1          TR0 = 0; // ÂêØÂä®ÂÆöÊó∂Âô®0
  93   1        EA=1;
  94   1        
  95   1      } 
  96          
  97          void timer0_isr() interrupt 1{
  98   1          TH0 = (TIMER0_RELOAD_VALUE >> 8) & 0xFF; // ÈáçÊñ∞ËÆæÁΩÆÈ´òÂ≠óËäÇÈáçËΩΩÂÄº
  99   1          TL0 = TIMER0_RELOAD_VALUE & 0xFF; // ÈáçÊñ∞ËÆæÁΩÆ‰ΩéÂ≠óËäÇÈáçËΩΩÂÄº
 100   1          ms_elapsed++;
 101   1          if(ms_elapsed == 100){
 102   2            ms_elapsed = 0;       
 103   2            seconds++;
 104   2            if(seconds == 60){
 105   3              seconds = 0;
 106   3              minutes++;
 107   3              if(minutes == 60){
 108   4                minutes = 0;
 109   4                hours++;
 110   4              }
 111   3            }
 112   2          }
 113   1        
 114   1      }
 115            
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 15:55:57 PAGE 3   

 116             
 117          
 118          
 119          
 120          unsigned char i, j;
 121          void key_scan_task(){
 122   1        if (StaStoBon == 0) { // Start/Stop button
 123   2          TR0 = !TR0;
 124   2          while (StaStoBon == 0);
 125   2        }
 126   1        if (RestBon == 0) { // Reset button
 127   2          counter = ms_elapsed = seconds = minutes = hours = 0; //ÁßíË°®Ê∏ÖÈõ∂
 128   2          for (i = 0; i < 3; i++) {                             //ËÆ°Ê¨°Ê∏ÖÈõ∂
 129   3            for (j = 0; j < 4; j++) {
 130   4              lap[i][j] = 0;
 131   4            }
 132   3          }
 133   2          while (RestBon == 0);
 134   2        }
 135   1        if (CounBon == 0) { // Lap button
 136   2          if(counter < 3){
 137   3            if(TR0)         //ÂÅúÊ≠¢Ë∑ëÁßí‰∏çËÆ∞Ê¨°
 138   3            {
 139   4              lap[counter][0] = hours;
 140   4              lap[counter][1] = minutes;
 141   4              lap[counter][2] = seconds;
 142   4              lap[counter][3] = ms_elapsed;
 143   4              counter++;
 144   4            }
 145   3            
 146   3          }
 147   2          
 148   2          
 149   2          while (CounBon == 0);
 150   2        }
 151   1      }
 152          
 153          void display_task(){
 154   1        
 155   1        char tempbuff[16];
 156   1        sprintf(tempbuff,"  %02d:%02d:%02d:%02d",hours,minutes,seconds,ms_elapsed);
 157   1        lcd_set_cursor(0, 0);
 158   1        lcd_write_string(tempbuff);
 159   1      }
 160          
 161          void display1_task(){
 162   1        
 163   1        char tempbuff[16];
 164   1        sprintf(tempbuff,"1 %02d:%02d:%02d:%02d",lap[0][0],lap[0][1],lap[0][2],lap[0][3]);
 165   1        lcd_set_cursor(1, 0);
 166   1        lcd_write_string(tempbuff);
 167   1        sprintf(tempbuff,"2 %02d:%02d:%02d:%02d",lap[1][0],lap[1][1],lap[1][2],lap[1][3]);
 168   1        lcd_set_cursor(2, 0);
 169   1        lcd_write_string(tempbuff);
 170   1        sprintf(tempbuff,"3 %02d:%02d:%02d:%02d",lap[2][0],lap[2][1],lap[2][2],lap[2][3]);
 171   1        lcd_set_cursor(3, 0);
 172   1        lcd_write_string(tempbuff);
 173   1      
 174   1      }
 175          
 176          void main() {
 177   1          timer0_init();
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2023 15:55:57 PAGE 4   

 178   1          lcd_init();
 179   1        while(1){
 180   2          display_task();
 181   2          display1_task();
 182   2          key_scan_task();
 183   2        }
 184   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    638    ----
   CONSTANT SIZE    =     88    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
